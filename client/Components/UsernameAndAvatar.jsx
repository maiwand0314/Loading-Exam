import React, { useEffect, useState } from "react";
import { useNavigate } from 'react-router-dom';
import vikingAvatar from "../assets/Viking.png";
import SwordmanSUpAvatar from '../assets/SwordmanSUp.png';
import WitchAvatar from '../assets/Witch.png';
import SwordWomanAvatar from '../assets/SwordWoman.png';
import ArcherAvatar from '../assets/Archer.png';
import SwordmanSDownAvatar from '../assets/SwordmanSDown.png';
import Cookies from "js-cookie";
import usernames from "../assets/usernames";


const UsernameAndAvatar = () => {
    // Set a cookie
    const userToken = Cookies.get("user_token");
    const nameToken = Cookies.get("name_token");


    // Delete a cookie
    const logout = () => {
        Cookies.remove("user_token");
        // Additional logout logic...
    };


    const [chosenAvatarId, setChosenAvatarId] = useState(null);
    const [randomUsername, setRandomUsername] = useState(null);
    const navigate = useNavigate(); // Use navigate for programmatic navigation

    const avatars = [
        { id: 'viking1', src: vikingAvatar, alt: "avatar of viking" },
        { id: 'swordmanUp', src: SwordmanSUpAvatar, alt: "avatar of swordman" },
        { id: 'witch', src: WitchAvatar, alt: "avatar of witch" },
        { id: 'SwordWoman', src: SwordWomanAvatar, alt: "avatar of pink sword" },
        { id: 'Archer', src: ArcherAvatar, alt: "avatar of archer" },
        { id: 'swordmanDown', src: SwordmanSDownAvatar, alt: "avatar of swordman" },
    ];

    const gameRoomId = "4400AB"

    useEffect(() => {
        const randomIndex = Math.floor(Math.random() * usernames.generatedUsernames.length);
        setRandomUsername(usernames.generatedUsernames[randomIndex]);
    }, []);

    const handleAvatarClick = (avatarId) => {
        setChosenAvatarId(avatarId);

        //Made cookies secure with Library
        Cookies.set("name_token", randomUsername, {expires: 1, path: "/", secure: true, sameSite: 'strict'});
        Cookies.set("user_token", avatarId, {expires: 1, path: "/", secure: true, sameSite: 'strict'});

        console.log("Worked")
    };

    function handleContinueClick() {
        if (chosenAvatarId != null) {
            navigate('/gameID=1'); // Navigate to the desired route
        } else {
            console.log("Please choose an avatar first.");
        }
    }

    return (
        <div>
            <section className="name-and-avatar-container">
                <div className="info-boxAvatar">
                    <p>Waiting for all players!</p>
                    <p>GameRoom: {gameRoomId}</p>
                </div>
                <div className="username-and-avatar-mini-container">
                    <div className="name-containerAvatar">
                        <h3>Your autogenerated name:</h3>
                        <p>'{randomUsername}'</p>
                    </div>
                    <div>
                        <h3>Choose your avatar:</h3>
                        <div className="avatars-container">
                            {avatars.map(avatar => (
                                <img
                                    key={avatar.id}
                                    src={avatar.src}
                                    alt={avatar.alt}
                                    id={avatar.id}
                                    onClick={() => handleAvatarClick(avatar.id)}
                                    style={{
                                        transform: chosenAvatarId === avatar.id ? "scale(1.5)" : "scale(1)",
                                        zIndex: chosenAvatarId === avatar.id ? "1" : "0",
                                    }}
                                />
                            ))}
                        </div>
                    </div>

                </div>
                <button className="continue-buttonAvatar" onClick={handleContinueClick}>CONTINUE</button>

            </section>
        </div>
    );
};

export default UsernameAndAvatar;
